trigger:
- master

pool:
  vmImage: 'windows-latest'

jobs:

- job: build

  steps:
  
  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'https://sonarcloud.io/project/configuration?id=MishaelHarrison_Co-Op-19-API'
      organization: 'mishaelharrison'
      scannerMode: 'MSBuild'
      projectKey: 'sonar.productkey'
    displayName: "compile cloud analisis"


  - script: dotnet test
      --configuration $(buildConfiguration)
      --logger trx
      --no-build
      --results-directory $(Common.TestResultsDirectory)
      --settings coverlet.runsettings
    workingDirectory: $(solutionPath)
    continueOnError: true
    displayName: dotnet test

  - task: SonarCloudAnalyze@1
    displayName: sonarcloud analysis run

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testRunner: VSTest
      testResultsFiles: $(Common.TestResultsDirectory)/*.trx
    displayName: test results build publish

  - task: PublishCodeCoverageResults@1
    condition: succeededOrFailed()
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: $(Common.TestResultsDirectory)/*/coverage.cobertura.xml
    displayName: code coverage build publish

  - task: SonarCloudPublish@1
    condition: succeededOrFailed()
    displayName: sonarcloud results build publish
  
  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
    displayName: "dotnet build"

  - task: DotNetCoreCLI@2
    inputs:
      command: 'publish'
      publishWebProjects: true
    displayName: "compile a publish"

  - task: SonarCloudAnalyze@1
    displayName: "publish cloud analisis"

  - task: AzureRmWebAppDeployment@4
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: 'Pay-As-You-Go Dev/Test(3c1324b2-479b-4445-ba09-0814a6b4f9bd)'
      appType: 'webApp'
      WebAppName: 'DB-19'
      packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
    displayName: "publish app to azure webapps"